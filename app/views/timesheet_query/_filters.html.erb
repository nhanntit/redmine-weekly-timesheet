<script type="text/javascript">
  function add_filter() {
    select = $('#add_filter_select')[0];
    field = select.value;
    $('#tr_' + field).show();
    check_box = $('#cb_' + field)[0];
    check_box.checked = true;
    toggle_filter(field);
    select.selectedIndex = 0;

    for (i = 0; i < select.options.length; i++) {
      if (select.options[i].value == field) {
        select.options[i].disabled = true;
      }
    }
  }

  function toggle_filter(field) {
    check_box = $('#cb_' + field)[0];

    if (check_box.checked) {
      $("#operators_" + field).show();
      toggle_operator(field);
    } else {
      $("#operators_" + field).hide();
      $("#div_values_" + field).hide();
    }
  }

  function toggle_operator(field) {
    operator = $("#operators_" + field)[0];
    switch (operator.value) {
      case "!*":
      case "*":
      case "t":
      case "w":
      case "o":
      case "c":
        $("#div_values_" + field).hide();
        break;
      default:
        $("#div_values_" + field).show();
        break;
    }
    toggle_operator_date_range(field);
  }

  function toggle_multi_select(field) {
    select = $('#values_' + field)[0];
    if (select.multiple == true) {
      select.multiple = false;
    } else {
      select.multiple = true;
    }
  }

  function toggle_operator_date_range(field){
    cb_field = $("#cb_" + field)[0];
    if (cb_field.checked){
      operator = $("#operators_" + field)[0];
      switch (operator.value) {
        case "..":
          $("#div_values_" + field).hide();	// Hide the "days" textbox.
          if(document.getElementById("div_date_range_" + field) != null)
            $("#div_date_range_" + field).show(); // Show "From" ... "To"... textbox.
          break;
        default:
          if(document.getElementById("div_date_range_" + field) != null)
            $("#div_date_range_" + field).hide();
          break;
      }
    } else {
      if(document.getElementById("div_date_range_" + field) != null)
        $("#div_date_range_" + field).hide();
    }
  }

  function apply_filters_observer() {
    $("#query_form input[type=text]").keypress(function(e){
      var code = e.which || e.keyCode;
      if (code == 13) {
        $.ajax({
          url: '<%= url_for(:set_filter => 1) %>',
          type: 'POST',
          data: $('#query_form').serialize(),
          success: function (response) { $('#content').html(response); },
          failure: function (msg) { $('#content').html(msg); },
          complete: function () { e.stop(); apply_filters_observer(); }
        });
      }
    });
  }

  $(document).ready(function(){ apply_filters_observer(); });

</script>

<table width="100%">
  <tr>
    <td>
      <table>
        <% query.available_filters.sort{|a,b| a[1][:order]<=>b[1][:order]}.each do |filter| %>
          <% field = filter[0]
             options = filter[1] %>
          <tr <%= "style='display:none;'".html_safe unless query.has_filter?(field) %> id="tr_<%= field %>" class="filter">
            <td style="width:200px;">
              <%= check_box_tag 'fields[]', field, query.has_filter?(field), :onclick => "toggle_filter('#{field}');", :id => "cb_#{field}" %>
              <label for="cb_<%= field %>"><%= filter[1][:name] || l(("field_"+field.to_s.gsub(/\_id$/, "")).to_sym) %></label>
            </td>
            <td style="width:150px;">
              <%= select_tag "operators[#{field}]", options_for_select(operators_for_select(options[:type]), query.operator_for(field)),
                             :id => "operators_#{field}", :onchange => "toggle_operator('#{field}');", :class => "select-small",
                             :style => "vertical-align: top;" %>
            </td>
            <td>
              <% if options[:type] == :date || options[:type] == :date_past %>
                <%
                   value_days = ''
                   value_date_from = ''
                   value_date_to = ''
                   fieldValues = query.values_for(field)
                   if(fieldValues != nil && fieldValues.is_a?(Array))
                     # Assign correct values for each fields in this area.
                     if query.operator_for(field) == ".." && fieldValues.length >= 3 # 3 values of days, from and to date
                       value_date_from = fieldValues[1]
                       value_date_to = fieldValues[2]
                     elsif fieldValues.length > 0
                       value_days = fieldValues[0]
                     end
                   end
                %>
              <% end %>
              <div id="div_values_<%= field %>" style="display:none;">
                <% case options[:type]
                     when :list, :list_optional, :list_status, :list_subprojects %>
                  <select <%= "multiple=true" if query.values_for(field) and query.values_for(field).length > 1 %> name="values[<%= field %>][]" id="values_<%= field %>" class="select-small" style="vertical-align: top;">
                    <%= options_for_select options[:values], query.values_for(field) %>
                  </select>
                  <%= link_to_function image_tag('bullet_toggle_plus.png'), "toggle_multi_select('#{field}');", :style => "vertical-align: bottom;" %>
                <% when :list_member %>
                  <select name="values[<%= field %>][]" id="values_<%= field %>">
                    <%= options_for_select options[:values], query.values_for(field) %>
                  </select>
                <% when :date, :date_past %>
                  <%= text_field_tag "values[#{field}][]", value_days , :id => "values_#{field}", :size => 3, :class => "select-small" %> <%= l(:label_day_plural) %>
                <% when :string, :text %>
                  <%= text_field_tag "values[#{field}][]", query.values_for(field), :id => "values_#{field}", :size => 30, :class => "select-small" %>
                <% when :integer %>
                  <%= text_field_tag "values[#{field}][]", query.values_for(field), :id => "values_#{field}", :size => 3, :class => "select-small" %>
                <% end %>
              </div>
              <% if options[:type] == :date || options[:type] == :date_past %>
                <div class="date_range" id="div_date_range_<%= field %>" style="display:none;">
                  <%= l(:label_date_from) %> <%= text_field_tag "values[#{field}][]", value_date_from, :id => "#{field}_datefrom", :size => 8, :class => "select-small" %>
                  <%=calendar_for("#{field}_datefrom") %>
                  <%= l(:label_date_to) %> <%= text_field_tag "values[#{field}][]", value_date_to, :id => "#{field}_dateto", :size => 8, :class => "select-small" %>
                  <%=calendar_for("#{field}_dateto")%>
                </div>
              <% end %>
              <script type="text/javascript">toggle_filter('<%= field %>');</script>
            </td>
          </tr>
        <% end %>
      </table>
    </td>
    <td class="add-filter">
      <%= label_tag('add_filter_select', l(:label_filter_add)) %>:
      <%= select_tag 'add_filter_select', options_for_select([["",""]] + query.available_filters.sort{|a,b| a[1][:order]<=>b[1][:order]}.collect{|field| [ field[1][:name] || l(("field_"+field[0].to_s.gsub(/_id$/, "")).to_sym), field[0]] unless query.has_filter?(field[0])}.compact),
                     :onchange => "add_filter();",
                     :class => "select-small",
                     :name => nil %>
    </td>
  </tr>
</table>
